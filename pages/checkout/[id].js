/* eslint-disable @next/next/no-img-element */
import React from "react";
import moment from "moment";
import Head from "next/head";
import Footer from "../../components/Footer";
import FormCheckout from "../../components/FormCheckout";
import Navbar from "../../components/Navbar";
import { getData } from "../../utils/fetchData";
import { formatDate } from "../../utils/formatDate";
import { useRouter } from "next/router";

// Fungsi komponen Checkout
export default function Checkout({ detailPage }) {
  const router = useRouter(); // Mendapatkan router dari useRouter
  const { ticketId } = router.query; // Mendapatkan parameter ticketId dari query router

  // Fungsi untuk memformat harga
  const formatPrice = (price) => {
    return price
      .toLocaleString("id-ID", { style: "currency", currency: "IDR" }) // Memformat harga dalam mata uang Rupiah
      .replace(/(\.|,)00$/g, ""); // Menghapus digit desimal dan nol yang tidak penting
  };

  return (
    <>
      <Head>
        <title>NgeventKuy || Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      <section className="bg-navy">
        <div className="checkout container">
          <div className="text-center checkout-title">Checkout Your Event</div>

          <div className="event-details container d-flex flex-wrap justify-content-lg-center align-items-center gap-5">
            <img
              src={`${process.env.NEXT_PUBLIC_API}/${detailPage.image.name}`}
              className="event-image"
              alt="ngevent"
            />
            <div className="d-flex flex-column gap-3">
              <h5>{detailPage.title}</h5>

              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-marker-white.svg" alt="" />
                <span>{detailPage.venueName}</span>
              </div>
              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-time-white.svg" alt="" />
                <span> {moment(detailPage.date).format("HH.MM A")}</span>
              </div>
              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-calendar-white.svg" alt="" />
                <span>{formatDate(detailPage.date)}</span>
              </div>
            </div>
            <div className="total-price">
              {detailPage.tickets.map((ticket) => (
                <React.Fragment key={ticket._id}>
                  {ticket._id === ticketId &&
                    (ticket.price === 0 ? "Free" : formatPrice(ticket.price))}
                </React.Fragment>
              ))}
            </div>
          </div>

          {/* form */}
          <FormCheckout tickets={detailPage.tickets} />
        </div>
      </section>
      <Footer />
    </>
  );
}

// Fungsi untuk mendapatkan props dari server saat runtime
export async function getServerSideProps(context) {
  const { token } = context.req.cookies; // Mendapatkan token dari cookies

  // Jika token tidak tersedia, maka redirect ke halaman signin
  if (!token) {
    return {
      redirect: {
        destination: "/signin",
        permanent: false,
      },
    };
  }

  // Mengambil data detail acara dari server berdasarkan parameter id
  const req = await getData(`/api/v1/events/${context.params.id}`);
  const res = req.data; // Menyimpan data detail acara

  // Mengembalikan props yang berisi detailPage dari acara
  return {
    props: { detailPage: res },
  };
}
