/* eslint-disable react/no-unescaped-entities */
/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useState } from "react";
import Head from "next/head";
import Button from "../../components/Button";
import CardEvent from "../../components/CardEvent";
import Footer from "../../components/Footer";
import Navbar from "../../components/Navbar";
import Statistics from "../../components/Statistics";
import Stories from "../../components/Stories";
import { useRouter } from "next/router";
import { getData } from "../../utils/fetchData";
import moment from "moment";
import { formatDate } from "../../utils/formatDate";
import Cookies from "js-cookie";

// Komponen DetailPage untuk menampilkan detail acara
export default function DetailPage({ detailPage, id }) {
  const [data, setData] = useState([]); // State untuk menyimpan data acara
  useEffect(() => {
    // Menggunakan useEffect untuk melakukan fetch data saat komponen dimuat
    const fetchData = async () => {
      try {
        // Mengambil data acara dari API dengan memanggil getData
        const res = await getData("api/v1/events");
        // Setelah data diterima, disimpan dalam state 'data'
        setData(res.data);
      } catch (err) {
        // Tangani kesalahan jika ada
      }
    };

    fetchData(); // Memanggil fungsi fetchData
  }, []); // Efek hanya dijalankan sekali saat komponen dimuat

  const router = useRouter(); // Menginisialisasi router dari Next.js

  // Fungsi handleSubmit untuk menangani navigasi ke halaman checkout
  const handleSubmit = (ticketId, organizer) => {
    // Mendapatkan token dari cookie
    const token = Cookies.get("token");
    // Jika pengguna belum masuk, arahkan ke halaman signin
    if (!token) {
      return router.push("/signin");
    } else {
      // Jika pengguna sudah masuk, arahkan ke halaman checkout dengan menyertakan informasi tiket
      router.push(
        `/checkout/${id}?ticketId=${ticketId}&organizer=${organizer}`
      );
    }
  };

  // Fungsi untuk memformat harga
  const formatPrice = (price) => {
    return price
      .toLocaleString("id-ID", { style: "currency", currency: "IDR" }) // Memformat harga sebagai mata uang IDR
      .replace(/(\.|,)00$/g, ""); // Menghilangkan angka desimal jika bernilai nol
  };

  return (
    <>
      <Head>
        <title>{detailPage.title} | NgeventKuy!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      {/* Tampilkan gambar acara dengan tautan API atau gambar default jika tidak tersedia */}
      <div className="preview-image bg-navy text-center">
        <img
          src={
            `${process.env.NEXT_PUBLIC_API}/${detailPage?.image?.name}`
              ? `${process.env.NEXT_PUBLIC_API}/${detailPage?.image?.name}`
              : "/images/details-image.png"
          }
          className="img-content"
          alt="semina"
        />
      </div>

      {/* Bagian konten detail acara */}
      <div className="details-content container">
        <div className="d-flex flex-wrap justify-content-lg-center gap">
          <div className="d-flex flex-column description">
            <div className="headline">{detailPage.title}</div>
            <br />
            <div className="event-details">
              <h6>Event Details</h6>
              <p className="details-paragraph">{detailPage.about}</p>
            </div>
            <div className="keypoints">
              {detailPage.keyPoint.map((key, i) => {
                return (
                  <div className="d-flex align-items-start gap-3" key={i}>
                    <img src="/icons/ic-check.svg" alt="semina" />
                    <span>{key}</span>
                  </div>
                );
              })}
            </div>
            <div className="map-location">
              <h6>Event Location</h6>
              <div className="map-placeholder">
                {/* Render Google Maps Embed Here */}
                <div
                  dangerouslySetInnerHTML={{ __html: detailPage.mapEmbedCode }}
                />
              </div>
            </div>
          </div>

          <div className="d-flex flex-column card-event">
            <h6>Your Talents</h6>
            <div className="d-flex align-items-center gap-3 mt-3">
              <img
                src={`${process.env.NEXT_PUBLIC_API}/${detailPage?.talent?.image?.name}`}
                alt="semina"
                style={{
                  width: "20%",
                  height: "100%",
                  objectFit: "cover",
                  objectPosition: "center",
                }}
              />
              <div>
                <div className="speaker-name">{detailPage?.talent?.name}</div>
                <span className="occupation">{detailPage?.talent?.role}</span>
              </div>
            </div>
            <hr />

            {/* 
            Ini adalah bagian dari tampilan detail acara.
            Menampilkan informasi tiket pertama dari array tiket detail acara.
            */}
            <h6>{detailPage.tickets[0].type}</h6>

            {/* 
            Menampilkan harga tiket pertama. Jika harga 0, maka tiket gratis, jika tidak, maka tampilkan harga dan mata uang.
            */}
            <div className="price my-3">
              {detailPage.tickets[0].price === 0
                ? "free"
                : formatPrice(detailPage.tickets[0].price)}
              <span>/person</span>
            </div>

            {/* 
            Menampilkan lokasi acara dengan ikon marker dan nama venue.
            Jika nama venue terlalu panjang, maka akan terjadi wrap kata.
            */}
            <div className="d-flex gap-3 align-items-center card-details">
              <img src="/icons/ic-marker.svg" alt="semina" />{" "}
              <span style={{ maxWidth: "250px", wordWrap: "break-word" }}>
                {detailPage.venueName}
              </span>
            </div>

            {/* 
            Menampilkan waktu acara dengan ikon jam.
            */}
            <div className="d-flex gap-3 align-items-center card-details">
              <img src="/icons/ic-time.svg" alt="semina" />{" "}
              {moment(detailPage.date).format("HH.MM A")}
            </div>

            {/* 
            Menampilkan tanggal acara dengan ikon kalender.
            */}
            <div className="d-flex gap-3 align-items-center card-details">
              <img src="/icons/ic-calendar.svg" alt="semina" />{" "}
              {formatDate(detailPage.date)}
            </div>

            {/* 
            Tombol "Join Now" hanya ditampilkan jika stok tiket tidak kosong.
            Ketika tombol diklik, akan menjalankan fungsi handleSubmit untuk menavigasi ke halaman checkout.
            */}
            {detailPage.stock !== 0 && (
              <Button
                variant={"btn-green"}
                action={() =>
                  handleSubmit(detailPage.tickets[0]._id, detailPage.organizer)
                }
              >
                Join Now
              </Button>
            )}
          </div>
        </div>

        {/*
        <div className="mt-5 row justify-content-lg-center">
          {detailPage.tickets.map((ticket, index) =>
            ticket.statusTicketCategory &&
            moment().isBefore(ticket.expiredAt) ? (
              <div
                key={index}
                className={`col card-event mb-3 ${
                  index !== detailPage.tickets.length - 1 ? "me-3" : ""
                }`}
              >
                <h6>{ticket.type}</h6>
                <div className="price my-3">
                  {ticket.price === 0 ? "free" : formatPrice(ticket.price)}
                  <span>/person</span>
                </div>
                <div className="d-flex gap-3 align-items-center card-details">
                  <img src="/icons/ic-marker.svg" alt="semina" />{" "}
                  {detailPage.venueName}
                </div>
                <div className="d-flex gap-3 align-items-center card-details">
                  <img src="/icons/ic-time.svg" alt="semina" />{" "}
                  {moment(detailPage.date).format("HH.MM A")}
                </div>
                <div className="d-flex gap-3 align-items-center card-details">
                  <img src="/icons/ic-calendar.svg" alt="semina" />{" "}
                  {formatDate(detailPage.date)}
                </div>
                {detailPage.stock !== 0 && (
                  <Button
                    variant={"btn-green"}
                    action={() =>
                      handleSubmit(ticket._id, detailPage.organizer)
                    }
                  >
                    Join Now
                  </Button>
                )}
              </div>
            ) : (
              ""
            )
          )}
        </div>
        */}
      </div>

      <CardEvent data={data} title="Similiar Events" subTitle="Next One" />
      <Stories />
      <Statistics />
      <Footer />
    </>
  );
}

// Fungsi ini merupakan bagian dari Next.js dan digunakan untuk mendapatkan props yang akan digunakan dalam komponen DetailPage.
export async function getServerSideProps(context) {
  // Mengambil data detail acara dari server dengan menggunakan parameter id dari context.
  const req = await getData(`api/v1/events/${context.params.id}`);

  // Respon dari permintaan data.
  const res = req.data;

  // Menampilkan data detail acara ke konsol untuk keperluan debugging atau pengecekan.
  console.log(res);

  // Mengembalikan props yang akan digunakan oleh komponen DetailPage.
  return {
    props: { detailPage: res, id: context.params.id },
  };
}
